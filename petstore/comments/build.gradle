plugins {
    alias(libs.plugins.mnApp)
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.*")
    }
}

application {
    mainClass.set("example.comments.Application")
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("org.projectlombok:lombok")

    implementation projects.api

    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.discovery:micronaut-discovery-client")


    implementation("io.micronaut.neo4j:micronaut-neo4j-bolt")
    implementation("org.neo4j:neo4j-ogm-core:3.2.33")

    compileOnly("org.projectlombok:lombok")

    // I am puzzled with this. It seems I should be using the bolt driver, not embedded driver
    // but when I run the tests I get a ClassNotFoundError for embedded driver API
    // I suspect I have something mis-wired
    runtimeOnly("org.neo4j:neo4j-ogm-embedded-driver:3.2.33")
    runtimeOnly("org.neo4j:neo4j:3.2.9")

    testImplementation("org.assertj:assertj-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:neo4j:1.17.1")
}