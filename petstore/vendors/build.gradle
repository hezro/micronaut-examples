plugins {
    alias(libs.plugins.mnApp)
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.*")
    }
}

application {
    mainClass.set("example.vendors.Application")
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")

    implementation projects.api

    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")

    implementation("io.micronaut.discovery:micronaut-discovery-client")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")

    implementation("jakarta.annotation:jakarta.annotation-api")

    compileOnly("io.micronaut:micronaut-http-validation")
    compileOnly("io.micronaut.data:micronaut-data-processor")

    runtimeOnly("mysql:mysql-connector-java")
    runtimeOnly("org.flywaydb:flyway-mysql")

    testImplementation("org.assertj:assertj-core")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
}
