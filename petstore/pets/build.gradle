plugins {
    alias(libs.plugins.mnApp)
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.*")
    }
}

application {
    mainClass.set("example.pets.Application")
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.data:micronaut-data-document-processor")

    implementation projects.api

    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.discovery:micronaut-discovery-client")
    implementation("io.micronaut.netflix:micronaut-netflix-hystrix")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.data:micronaut-data-mongodb")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut.mongodb:micronaut-mongo-reactive")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mongodb")
    testImplementation("org.testcontainers:testcontainers")
}